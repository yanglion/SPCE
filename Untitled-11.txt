
源代码：核心层、应用层  git 分工程、分人员权限。 每个系统有自己的构建机。构建机上能够看到源代码。 Gitrunner 不能通过权限进行分离。 编译好的包放在构建机上。 maven做编译、打包。 构建机调maven，连接nexus制品库。制度库代理到阿里。经过跳板机。    流水线触发cd， easyops拉包，执行部署。   easyops管理的环境有测试环境、开发环境。   体现的是分支。开发环境、联调环境、sit、uat、sit长周期、uat长周期。  
如何开发： 
ide：idea、eclips。 拉到本机电脑，都是行方提供的。
本机电脑安装终端管控软件。 
文档在项目管理平台。

项目经理见分支，feature#任务号，项目经理合并，合并后自动触发编译部署到开发环境，做单元测试。 
需求号 
上生产，配置管理员。

CBF 上限 强制停止 

单独隔离的核心层代码环境，如何做到审计。

#1 核心层和应用层源代码要隔离
#2 终端IDE的管理
#3 源代码的备份  加密  防止云平台管理员访问  
#4 源代码的合并 生产是配置管理员  准生产是行内开发人员   
#5 源代码的恢复、制品库的恢复、构建脚本的备份和恢复、easyops发布的备份和恢复
#6 项目管理文档的备份和恢复

贵州银行开发过程管理实施细则 
一、目的：
 1. 明确开发流程和对源代码的管理要求；
 2. 明确流程中的参与团队及职责；
二、目标：
 1. 对代码进行分层管理，实现核心层和应用层代码的物理隔离和可审计；
 2. 对开发过程产生的数据进行备份，遇到突发情况，可进行恢复；
 3. 权限可控，防止泄露
 
三、开发过程要求
一张图说明，涉及到的git、构建机、制品库、外部、项目管理平台、easyops、开发/测试环境、终端ide
详细说明几大过程的要求
 1. 源代码管理
  a. 物理隔离
  b. 权限申请
  c. 分支
  d. 代码层级
  
 2. 构建
  a. 脚本的管理
  b. 谁来构建。测试分支？准生产分支？生产分支？
 3. 制品
  a. 外部同步
  b. 内部项目级的
 4. Cd
  a. 版本
 5. IDE
  a. idea、eclips
  b. 终端安全
 6. 项目文档

四、备份和恢复
 1. 源代码
  a. 备份频率
  b. 恢复验证频率
  c. 加密，防止云管理员使用
 2. 制品库
 3. 构建脚本
 4. 发布脚本
 5. 项目文档

规范 
自主掌控 培训 
新技术 选型 


架构 
 
团队职责 

外部敏感信息关注  冯瑞廷


TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS')